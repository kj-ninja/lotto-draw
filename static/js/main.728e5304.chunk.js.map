{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","chosenNumbers","setChosenNumbers","numberOfDraws","setNumberOfDraws","drawResult","length","a","b","sortedDrawnNumbers","sort","sortedChosenNumbers","Array","isArray","every","val","index","doesArraysEqual","arr","r","Math","floor","random","indexOf","push","drawUniqueThreeNumbers","className","from","_","i","map","includes","onClick","number","filter","chosenNumber","handleNumberClick","console","log","years","days","getAmountOfYearsAndDaysByNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA6HeA,MA1Hf,WACE,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwCF,mBAAS,GAAjD,mBAAKG,EAAL,KAAoBC,EAApB,KAoDMC,EAAa,SAAbA,IACyB,IAAzBJ,EAAcK,SAClBF,EAAiBD,KAlDK,SAACI,EAAGC,GAC1B,IAAMC,EAAqBF,EAAEG,MAAK,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,KAC1CG,EAAsBH,EAAEE,MAAK,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,KAEjD,OAAOI,MAAMC,QAAQJ,IACnBG,MAAMC,QAAQF,IACdF,EAAmBH,SAAWK,EAAoBL,QAClDG,EAAmBK,OAAM,SAACC,EAAKC,GAAN,OAAgBD,IAAQJ,EAAoBK,MA8CnEC,CAhByB,WAG7B,IAFA,IAAIC,EAAM,GAEHA,EAAIZ,OAAS,GAAG,CACrB,IAAIa,EAAIC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GACjB,IAApBJ,EAAIK,QAAQJ,IAAWD,EAAIM,KAAKL,GAGtC,OAAOD,EAOcO,GACaxB,IAGhCI,MAmBJ,OACE,sBAAKqB,UAAU,MAAf,UACE,mEAEA,qBAAKA,UAAU,UAAf,SAjF0Bd,MAAMe,KAAK,CAACrB,OAAQ,KAAK,SAACsB,EAAGC,GAAJ,OAAUA,EAAI,KAmF3CC,KAAI,SAAAD,GAAC,OACrB,sBACEH,UAAS,iBAAYzB,EAAc8B,SAASF,GAAK,SAAW,IAE5DG,QAAS,kBA1DK,SAACC,GACzB,GAAIhC,EAAc8B,SAASE,GACzB/B,EAAiBD,EAAciC,QAAO,SAAAC,GAAY,OAAIF,IAAWE,UAC5D,CACL,GAA6B,IAAzBlC,EAAcK,OAAc,OAEhCJ,EAAiB,sBAAID,GAAJ,CAAmBgC,IAAQvB,MAAK,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,OAoDxC4B,CAAkBP,IAHnC,SAKGA,GAHIA,QASb,wBACEH,UAAS,4BAAiD,IAAzBzB,EAAcK,QAAgBH,EAAgB,EAAK,cAAgB,IACpG6B,QAnCmB,WACnB7B,EAAgB,IAEpBE,IAEAgC,QAAQC,IAAI,aA4BV,wBAOA,wBAAQZ,UAAS,4BAAgD,IAAzBzB,EAAcK,OAAe,cAAgB,IAAM0B,QAhC7E,WACa,IAAzB/B,EAAcK,SAElBJ,EAAiB,IACjBE,EAAiB,KA4Bf,wBAIA,sBAAKsB,UAAU,SAAf,UACE,kDAAqBvB,KACrB,uBAEA,kGACA,8BAnGkC,SAAC8B,GAIvC,IAHA,IAAIM,EAAQ,EACRC,EAAO,EAEJP,GACDA,GAAU,KACZM,IACAN,GAAU,MAEVO,IACAP,KAIJ,MAAM,UAAN,OAAiBM,EAAjB,kBAAgCC,GAqFtBC,CAAgCtC,YC1G/BuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.728e5304.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [chosenNumbers, setChosenNumbers] = useState([]);\n  let [numberOfDraws, setNumberOfDraws] = useState(0);\n\n  const generateNumbers = () => Array.from({length: 22}, (_, i) => i + 1);\n\n  const doesArraysEqual = (a, b) => {\n    const sortedDrawnNumbers = a.sort((a, b) => a - b);\n    const sortedChosenNumbers = b.sort((a, b) => a - b);\n\n    return Array.isArray(sortedDrawnNumbers) &&\n      Array.isArray(sortedChosenNumbers) &&\n      sortedDrawnNumbers.length === sortedChosenNumbers.length &&\n      sortedDrawnNumbers.every((val, index) => val === sortedChosenNumbers[index]);\n  }\n\n  const getAmountOfYearsAndDaysByNumber = (number) => {\n    let years = 0;\n    let days = 0;\n\n    while (number) {\n      if (number >= 365) {\n        years++;\n        number -= 365;\n      } else {\n        days++;\n        number--;\n      }\n    }\n\n    return `Years: ${years} days: ${days}`\n  };\n\n  const handleNumberClick = (number) => {\n    if (chosenNumbers.includes(number)) {\n      setChosenNumbers(chosenNumbers.filter(chosenNumber => number !== chosenNumber))\n    } else {\n      if (chosenNumbers.length === 3) return;\n\n      setChosenNumbers([...chosenNumbers, number].sort((a, b) => a - b));\n    }\n  };\n\n  const drawUniqueThreeNumbers = () => {\n    let arr = [];\n\n    while (arr.length < 3) {\n      let r = Math.floor(Math.random() * 22) + 1;\n      if (arr.indexOf(r) === -1) arr.push(r);\n    }\n\n    return arr;\n  };\n\n  const drawResult = () => {\n    if (chosenNumbers.length !== 3) return;\n    setNumberOfDraws(numberOfDraws++);\n\n    const drawnNumbers = drawUniqueThreeNumbers();\n    if (doesArraysEqual(drawnNumbers, chosenNumbers)) {\n      return;\n    } else {\n      drawResult();\n    }\n  };\n\n  const handleDrawResult = () => {\n    if (numberOfDraws > 0) return;\n\n    drawResult();\n\n    console.log('koniec!');\n  };\n\n  const resetDraw = () => {\n    if (chosenNumbers.length === 0) return;\n\n    setChosenNumbers([]);\n    setNumberOfDraws(0);\n  };\n\n  return (\n    <div className='App'>\n      <h1>Choose 3 unique numbers and draw!</h1>\n\n      <div className=\"numbers\">\n        {\n          generateNumbers().map(i => (\n            <span\n              className={`number ${chosenNumbers.includes(i) ? 'chosen' : ''}`}\n              key={i}\n              onClick={() => handleNumberClick(i)}\n            >\n              {i}\n            </span>\n          ))\n        }\n      </div>\n\n      <button\n        className={`draw-button start ${(chosenNumbers.length !== 3 || numberOfDraws > 0) ? 'not-allowed' : ''}`}\n        onClick={handleDrawResult}\n      >\n        Start Draw\n      </button>\n\n      <button className={`draw-button reset ${chosenNumbers.length === 0 ? 'not-allowed' : ''}`} onClick={resetDraw}>\n        Reset Draw\n      </button>\n\n      <div className=\"result\">\n        <p>Number of draws: {numberOfDraws}</p>\n        <br/>\n\n        <p>Amount of years and days assuming that you can draw once per day:</p>\n        <div>{getAmountOfYearsAndDaysByNumber(numberOfDraws)}</div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}